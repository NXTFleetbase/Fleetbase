{"version":3,"file":"index.js","sources":["../src/mirage/utils.ts","../src/mirage/upload-handler.ts"],"sourcesContent":["import RSVP from 'rsvp';\nimport UploadFileReader from '../system/upload-file-reader';\nimport { assert } from '@ember/debug';\n\ninterface AdditionalMetadata {\n  hasAdditionalMetadata?: boolean;\n  duration?: number;\n  animated?: boolean;\n  width?: number;\n  height?: number;\n}\n\ninterface FileMetadata extends AdditionalMetadata {\n  name: string;\n  size: number;\n  type: string;\n  extension: string;\n  url: string;\n}\n\nexport function extractFormData(formData: FormData) {\n  let data = {};\n  let file: { key: string; value: File } | null = null;\n\n  for (const [key, value] of formData.entries()) {\n    if (value instanceof File) {\n      file = { key, value };\n      continue;\n    }\n    data = { ...data, [key]: value };\n  }\n\n  assert('Failed find a file in request body', file?.key && file?.value);\n\n  return { file, data };\n}\n\nconst pipelines = {\n  async gif(file: File): Promise<AdditionalMetadata> {\n    const buffer = (await new UploadFileReader().readAsArrayBuffer(\n      file\n    )) as ArrayBuffer;\n    const data = new Uint8Array(buffer);\n    let duration = 0;\n    for (let i = 0; i < data.length; i++) {\n      // Find a Graphic Control Extension hex(21F904__ ____ __00)\n      if (\n        data[i] === 0x21 &&\n        data[i + 1] === 0xf9 &&\n        data[i + 2] === 0x04 &&\n        data[i + 7] === 0x00\n      ) {\n        // Swap 5th and 6th bytes to get the delay per frame\n        const delay = (data[i + 5] << 8) | (data[i + 4] & 0xff);\n\n        // Should be aware browsers have a minimum frame delay\n        // e.g. 6ms for IE, 2ms modern browsers (50fps)\n        duration += delay < 2 ? 10 : delay;\n      }\n    }\n\n    return {\n      hasAdditionalMetadata: true,\n      duration: duration / 1000,\n      animated: duration > 0,\n    };\n  },\n\n  image(_file: File, metadata: FileMetadata): RSVP.Promise<AdditionalMetadata> {\n    return new RSVP.Promise(function (resolve) {\n      const img = new Image();\n      img.onload = () => resolve({ hasAdditionalMetadata: true, img });\n      img.onerror = () => resolve({ hasAdditionalMetadata: false });\n      img.src = metadata.url;\n    }).then(function ({ hasAdditionalMetadata, img }) {\n      return {\n        hasAdditionalMetadata,\n        width: img?.naturalWidth,\n        height: img?.naturalHeight,\n      };\n    });\n  },\n\n  video(_file: File, metadata: FileMetadata): RSVP.Promise<AdditionalMetadata> {\n    const videoEl = document.createElement('video');\n    return new RSVP.Promise(function (resolve) {\n      videoEl.addEventListener('loadeddata', () =>\n        resolve({ hasAdditionalMetadata: true, video: videoEl })\n      );\n      videoEl.onerror = () => resolve({ hasAdditionalMetadata: false });\n      videoEl.src = metadata.url;\n      document.body.appendChild(videoEl);\n      videoEl.load();\n    })\n      .then(function ({ hasAdditionalMetadata, video }) {\n        return {\n          hasAdditionalMetadata,\n          duration: video?.duration,\n          width: video?.videoWidth,\n          height: video?.videoHeight,\n        };\n      })\n      .finally(function () {\n        document.body.removeChild(videoEl);\n      });\n  },\n\n  audio(_file: File, metadata: FileMetadata): RSVP.Promise<AdditionalMetadata> {\n    const audioEl = document.createElement('audio');\n    return new RSVP.Promise(function (resolve) {\n      audioEl.addEventListener('loadeddata', () =>\n        resolve({ hasAdditionalMetadata: true, audio: audioEl })\n      );\n      audioEl.onerror = () => resolve({ hasAdditionalMetadata: false });\n      audioEl.src = metadata.url;\n      document.body.appendChild(audioEl);\n      audioEl.load();\n    })\n      .then(function ({ hasAdditionalMetadata, audio }) {\n        return {\n          hasAdditionalMetadata,\n          duration: audio?.duration,\n        };\n      })\n      .finally(function () {\n        document.body.removeChild(audioEl);\n      });\n  },\n};\n\nexport async function extractFileMetadata(file: File) {\n  const url = (await new UploadFileReader().readAsDataURL(file)) as string;\n\n  const metadata: FileMetadata = {\n    name: file.name,\n    size: file.size,\n    type: file.type,\n    extension: (file.name.match(/\\.(.*)$/) || [])[1],\n    url,\n  };\n\n  const metadataPipelines = [];\n\n  if (metadata.type === 'image/gif') {\n    metadataPipelines.push(pipelines.gif(file));\n  }\n  if (metadata.type.match(/^image\\//)) {\n    metadataPipelines.push(pipelines.image(file, metadata));\n  }\n  if (metadata.type.match(/^video\\//)) {\n    metadataPipelines.push(pipelines.video(file, metadata));\n  }\n  if (metadata.type.match(/^audio\\//)) {\n    metadataPipelines.push(pipelines.audio(file, metadata));\n  }\n\n  const additionalMetadata = await RSVP.all(metadataPipelines);\n\n  additionalMetadata.forEach(function (data) {\n    Object.assign(metadata, data);\n  });\n\n  // Collapse state of `hasAdditionalMetadata` from multiple pipelines\n  // Should be `true` if at least one pipeline succeeded\n  metadata.hasAdditionalMetadata = additionalMetadata.some(\n    (data) => data.hasAdditionalMetadata\n  );\n\n  return metadata;\n}\n","import RSVP from 'rsvp';\nimport { extractFormData, extractFileMetadata } from './utils';\nimport {\n  macroCondition,\n  dependencySatisfies,\n  importSync,\n} from '@embroider/macros';\n\nconst NETWORK = {\n  wired: 50000, // 500 Mb/s\n  wifi: 15000, // 15 Mb/s\n  dsl: 1000, // 1 Mb/s\n  '4g': 3000, // 4 Mb/s\n  '3g': 250, // 250 kb/s\n  '2g': 50, // 50 kb/s\n  gprs: 20, // 20 kb/s\n  offline: 0,\n};\n\ninterface FakeRequest {\n  requestBody: FormData | object; // Replaced with an object by this handler\n  upload: {\n    onprogress: (event: ProgressEvent<EventTarget>) => void;\n  };\n}\n\nexport function uploadHandler(\n  fn: (this: void, db: unknown, request: FakeRequest) => void,\n  options = { network: null, timeout: null }\n) {\n  if (\n    macroCondition(\n      dependencySatisfies('miragejs', '*') &&\n        dependencySatisfies('ember-cli-mirage', '*')\n    )\n  ) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { Response } = importSync('miragejs') as { Response: any };\n    return function (db: unknown, request: FakeRequest) {\n      let speed = Infinity;\n\n      if (options.network && NETWORK[options.network]) {\n        speed = NETWORK[options.network] * 1024;\n      }\n\n      const { file, data } = extractFormData(request.requestBody as FormData);\n      let loaded = 0;\n      const total = file.value.size;\n\n      return new RSVP.Promise((resolve) => {\n        const start = new Date().getTime();\n\n        const upload = async () => {\n          const timedOut =\n            options.timeout && new Date().getTime() - start > options.timeout;\n          if (timedOut || loaded >= total) {\n            request.upload.onprogress(\n              new ProgressEvent('progress', {\n                lengthComputable: true,\n                total,\n                loaded: Math.min(loaded, total),\n              })\n            );\n\n            const metadata = await extractFileMetadata(file.value);\n            request.requestBody = { [file.key]: metadata, ...data };\n\n            if (timedOut) {\n              resolve(new Response(408));\n              return;\n            }\n\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            resolve(fn.call(this, db, request));\n          } else {\n            request.upload.onprogress(\n              new ProgressEvent('progress', {\n                lengthComputable: true,\n                total,\n                loaded,\n              })\n            );\n\n            loaded += speed / 20;\n            setTimeout(upload, 50);\n          }\n        };\n        upload();\n      });\n    };\n  } else {\n    throw new Error(\n      'You must add ember-cli-mirage and miragejs to your app to use this helper.'\n    );\n  }\n}\n"],"names":["extractFormData","formData","data","file","key","value","entries","File","_objectSpread","assert","pipelines","gif","buffer","UploadFileReader","readAsArrayBuffer","Uint8Array","duration","i","length","delay","hasAdditionalMetadata","animated","image","_file","metadata","RSVP","Promise","resolve","img","Image","onload","onerror","src","url","then","width","naturalWidth","height","naturalHeight","video","videoEl","document","createElement","addEventListener","body","appendChild","load","videoWidth","videoHeight","finally","removeChild","audio","audioEl","extractFileMetadata","readAsDataURL","name","size","type","extension","match","metadataPipelines","push","additionalMetadata","all","forEach","Object","assign","some","NETWORK","wired","wifi","dsl","gprs","offline","uploadHandler","fn","options","network","timeout","macroCondition","dependencySatisfies","Response","importSync","db","request","speed","Infinity","requestBody","loaded","total","start","Date","getTime","upload","timedOut","onprogress","ProgressEvent","lengthComputable","Math","min","call","setTimeout","Error"],"mappings":";;;;;;;;AAoBO,SAASA,eAAeA,CAACC,QAAkB,EAAE;EAClD,IAAIC,IAAI,GAAG,EAAE,CAAA;EACb,IAAIC,IAAyC,GAAG,IAAI,CAAA;EAEpD,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIJ,QAAQ,CAACK,OAAO,EAAE,EAAE;IAC7C,IAAID,KAAK,YAAYE,IAAI,EAAE;AACzBJ,MAAAA,IAAI,GAAG;QAAEC,GAAG;AAAEC,QAAAA,KAAAA;OAAO,CAAA;AACrB,MAAA,SAAA;AACF,KAAA;AACAH,IAAAA,IAAI,GAAAM,eAAA,CAAAA,eAAA,KAAQN,IAAI,CAAA,EAAA,EAAA,EAAA;AAAE,MAAA,CAACE,GAAG,GAAGC,KAAAA;KAAO,CAAA,CAAA;AAClC,GAAA;EAEAI,MAAM,CAAC,oCAAoC,EAAEN,IAAI,EAAEC,GAAG,IAAID,IAAI,EAAEE,KAAK,CAAC,CAAA;EAEtE,OAAO;IAAEF,IAAI;AAAED,IAAAA,IAAAA;GAAM,CAAA;AACvB,CAAA;AAEA,MAAMQ,SAAS,GAAG;EAChB,MAAMC,GAAGA,CAACR,IAAU,EAA+B;IACjD,MAAMS,MAAM,GAAI,MAAM,IAAIC,gBAAgB,EAAE,CAACC,iBAAiB,CAC5DX,IAAI,CACW,CAAA;AACjB,IAAA,MAAMD,IAAI,GAAG,IAAIa,UAAU,CAACH,MAAM,CAAC,CAAA;IACnC,IAAII,QAAQ,GAAG,CAAC,CAAA;AAChB,IAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,IAAI,CAACgB,MAAM,EAAED,CAAC,EAAE,EAAE;AACpC;AACA,MAAA,IACEf,IAAI,CAACe,CAAC,CAAC,KAAK,IAAI,IAChBf,IAAI,CAACe,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,IACpBf,IAAI,CAACe,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,IACpBf,IAAI,CAACe,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EACpB;AACA;AACA,QAAA,MAAME,KAAK,GAAIjB,IAAI,CAACe,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAKf,IAAI,CAACe,CAAC,GAAG,CAAC,CAAC,GAAG,IAAK,CAAA;;AAEvD;AACA;AACAD,QAAAA,QAAQ,IAAIG,KAAK,GAAG,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAA;AACpC,OAAA;AACF,KAAA;IAEA,OAAO;AACLC,MAAAA,qBAAqB,EAAE,IAAI;MAC3BJ,QAAQ,EAAEA,QAAQ,GAAG,IAAI;MACzBK,QAAQ,EAAEL,QAAQ,GAAG,CAAA;KACtB,CAAA;GACF;AAEDM,EAAAA,KAAKA,CAACC,KAAW,EAAEC,QAAsB,EAAoC;AAC3E,IAAA,OAAO,IAAIC,IAAI,CAACC,OAAO,CAAC,UAAUC,OAAO,EAAE;AACzC,MAAA,MAAMC,GAAG,GAAG,IAAIC,KAAK,EAAE,CAAA;AACvBD,MAAAA,GAAG,CAACE,MAAM,GAAG,MAAMH,OAAO,CAAC;AAAEP,QAAAA,qBAAqB,EAAE,IAAI;AAAEQ,QAAAA,GAAAA;AAAI,OAAC,CAAC,CAAA;AAChEA,MAAAA,GAAG,CAACG,OAAO,GAAG,MAAMJ,OAAO,CAAC;AAAEP,QAAAA,qBAAqB,EAAE,KAAA;AAAM,OAAC,CAAC,CAAA;AAC7DQ,MAAAA,GAAG,CAACI,GAAG,GAAGR,QAAQ,CAACS,GAAG,CAAA;AACxB,KAAC,CAAC,CAACC,IAAI,CAAC,UAAU;MAAEd,qBAAqB;AAAEQ,MAAAA,GAAAA;AAAI,KAAC,EAAE;MAChD,OAAO;QACLR,qBAAqB;QACrBe,KAAK,EAAEP,GAAG,EAAEQ,YAAY;QACxBC,MAAM,EAAET,GAAG,EAAEU,aAAAA;OACd,CAAA;AACH,KAAC,CAAC,CAAA;GACH;AAEDC,EAAAA,KAAKA,CAAChB,KAAW,EAAEC,QAAsB,EAAoC;AAC3E,IAAA,MAAMgB,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAAA;AAC/C,IAAA,OAAO,IAAIjB,IAAI,CAACC,OAAO,CAAC,UAAUC,OAAO,EAAE;AACzCa,MAAAA,OAAO,CAACG,gBAAgB,CAAC,YAAY,EAAE,MACrChB,OAAO,CAAC;AAAEP,QAAAA,qBAAqB,EAAE,IAAI;AAAEmB,QAAAA,KAAK,EAAEC,OAAAA;AAAQ,OAAC,CAAC,CACzD,CAAA;AACDA,MAAAA,OAAO,CAACT,OAAO,GAAG,MAAMJ,OAAO,CAAC;AAAEP,QAAAA,qBAAqB,EAAE,KAAA;AAAM,OAAC,CAAC,CAAA;AACjEoB,MAAAA,OAAO,CAACR,GAAG,GAAGR,QAAQ,CAACS,GAAG,CAAA;AAC1BQ,MAAAA,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,OAAO,CAAC,CAAA;MAClCA,OAAO,CAACM,IAAI,EAAE,CAAA;AAChB,KAAC,CAAC,CACCZ,IAAI,CAAC,UAAU;MAAEd,qBAAqB;AAAEmB,MAAAA,KAAAA;AAAM,KAAC,EAAE;MAChD,OAAO;QACLnB,qBAAqB;QACrBJ,QAAQ,EAAEuB,KAAK,EAAEvB,QAAQ;QACzBmB,KAAK,EAAEI,KAAK,EAAEQ,UAAU;QACxBV,MAAM,EAAEE,KAAK,EAAES,WAAAA;OAChB,CAAA;AACH,KAAC,CAAC,CACDC,OAAO,CAAC,YAAY;AACnBR,MAAAA,QAAQ,CAACG,IAAI,CAACM,WAAW,CAACV,OAAO,CAAC,CAAA;AACpC,KAAC,CAAC,CAAA;GACL;AAEDW,EAAAA,KAAKA,CAAC5B,KAAW,EAAEC,QAAsB,EAAoC;AAC3E,IAAA,MAAM4B,OAAO,GAAGX,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAAA;AAC/C,IAAA,OAAO,IAAIjB,IAAI,CAACC,OAAO,CAAC,UAAUC,OAAO,EAAE;AACzCyB,MAAAA,OAAO,CAACT,gBAAgB,CAAC,YAAY,EAAE,MACrChB,OAAO,CAAC;AAAEP,QAAAA,qBAAqB,EAAE,IAAI;AAAE+B,QAAAA,KAAK,EAAEC,OAAAA;AAAQ,OAAC,CAAC,CACzD,CAAA;AACDA,MAAAA,OAAO,CAACrB,OAAO,GAAG,MAAMJ,OAAO,CAAC;AAAEP,QAAAA,qBAAqB,EAAE,KAAA;AAAM,OAAC,CAAC,CAAA;AACjEgC,MAAAA,OAAO,CAACpB,GAAG,GAAGR,QAAQ,CAACS,GAAG,CAAA;AAC1BQ,MAAAA,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACO,OAAO,CAAC,CAAA;MAClCA,OAAO,CAACN,IAAI,EAAE,CAAA;AAChB,KAAC,CAAC,CACCZ,IAAI,CAAC,UAAU;MAAEd,qBAAqB;AAAE+B,MAAAA,KAAAA;AAAM,KAAC,EAAE;MAChD,OAAO;QACL/B,qBAAqB;QACrBJ,QAAQ,EAAEmC,KAAK,EAAEnC,QAAAA;OAClB,CAAA;AACH,KAAC,CAAC,CACDiC,OAAO,CAAC,YAAY;AACnBR,MAAAA,QAAQ,CAACG,IAAI,CAACM,WAAW,CAACE,OAAO,CAAC,CAAA;AACpC,KAAC,CAAC,CAAA;AACN,GAAA;AACF,CAAC,CAAA;AAEM,eAAeC,mBAAmBA,CAAClD,IAAU,EAAE;EACpD,MAAM8B,GAAG,GAAI,MAAM,IAAIpB,gBAAgB,EAAE,CAACyC,aAAa,CAACnD,IAAI,CAAY,CAAA;AAExE,EAAA,MAAMqB,QAAsB,GAAG;IAC7B+B,IAAI,EAAEpD,IAAI,CAACoD,IAAI;IACfC,IAAI,EAAErD,IAAI,CAACqD,IAAI;IACfC,IAAI,EAAEtD,IAAI,CAACsD,IAAI;AACfC,IAAAA,SAAS,EAAE,CAACvD,IAAI,CAACoD,IAAI,CAACI,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAChD1B,IAAAA,GAAAA;GACD,CAAA;EAED,MAAM2B,iBAAiB,GAAG,EAAE,CAAA;AAE5B,EAAA,IAAIpC,QAAQ,CAACiC,IAAI,KAAK,WAAW,EAAE;IACjCG,iBAAiB,CAACC,IAAI,CAACnD,SAAS,CAACC,GAAG,CAACR,IAAI,CAAC,CAAC,CAAA;AAC7C,GAAA;EACA,IAAIqB,QAAQ,CAACiC,IAAI,CAACE,KAAK,CAAC,UAAU,CAAC,EAAE;IACnCC,iBAAiB,CAACC,IAAI,CAACnD,SAAS,CAACY,KAAK,CAACnB,IAAI,EAAEqB,QAAQ,CAAC,CAAC,CAAA;AACzD,GAAA;EACA,IAAIA,QAAQ,CAACiC,IAAI,CAACE,KAAK,CAAC,UAAU,CAAC,EAAE;IACnCC,iBAAiB,CAACC,IAAI,CAACnD,SAAS,CAAC6B,KAAK,CAACpC,IAAI,EAAEqB,QAAQ,CAAC,CAAC,CAAA;AACzD,GAAA;EACA,IAAIA,QAAQ,CAACiC,IAAI,CAACE,KAAK,CAAC,UAAU,CAAC,EAAE;IACnCC,iBAAiB,CAACC,IAAI,CAACnD,SAAS,CAACyC,KAAK,CAAChD,IAAI,EAAEqB,QAAQ,CAAC,CAAC,CAAA;AACzD,GAAA;EAEA,MAAMsC,kBAAkB,GAAG,MAAMrC,IAAI,CAACsC,GAAG,CAACH,iBAAiB,CAAC,CAAA;AAE5DE,EAAAA,kBAAkB,CAACE,OAAO,CAAC,UAAU9D,IAAI,EAAE;AACzC+D,IAAAA,MAAM,CAACC,MAAM,CAAC1C,QAAQ,EAAEtB,IAAI,CAAC,CAAA;AAC/B,GAAC,CAAC,CAAA;;AAEF;AACA;AACAsB,EAAAA,QAAQ,CAACJ,qBAAqB,GAAG0C,kBAAkB,CAACK,IAAI,CACrDjE,IAAI,IAAKA,IAAI,CAACkB,qBAAqB,CACrC,CAAA;AAED,EAAA,OAAOI,QAAQ,CAAA;AACjB;;;;ACjKA,MAAM4C,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,KAAK;AAAE;AACdC,EAAAA,IAAI,EAAE,KAAK;AAAE;AACbC,EAAAA,GAAG,EAAE,IAAI;AAAE;AACX,EAAA,IAAI,EAAE,IAAI;AAAE;AACZ,EAAA,IAAI,EAAE,GAAG;AAAE;AACX,EAAA,IAAI,EAAE,EAAE;AAAE;AACVC,EAAAA,IAAI,EAAE,EAAE;AAAE;AACVC,EAAAA,OAAO,EAAE,CAAA;AACX,CAAC,CAAA;AASM,SAASC,aAAaA,CAC3BC,EAA2D,EAC3DC,OAAO,GAAG;AAAEC,EAAAA,OAAO,EAAE,IAAI;AAAEC,EAAAA,OAAO,EAAE,IAAA;AAAK,CAAC,EAC1C;AACA,EAAA,IACEC,cAAc,CACZC,mBAAmB,CAAC,UAAU,EAAE,GAAG,CAAC,IAClCA,mBAAmB,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAC/C,EACD;AACA;IACA,MAAM;AAAEC,MAAAA,QAAAA;AAAS,KAAC,GAAGC,UAAU,CAAC,UAAU,CAAsB,CAAA;AAChE,IAAA,OAAO,UAAUC,EAAW,EAAEC,OAAoB,EAAE;MAClD,IAAIC,KAAK,GAAGC,QAAQ,CAAA;MAEpB,IAAIV,OAAO,CAACC,OAAO,IAAIT,OAAO,CAACQ,OAAO,CAACC,OAAO,CAAC,EAAE;QAC/CQ,KAAK,GAAGjB,OAAO,CAACQ,OAAO,CAACC,OAAO,CAAC,GAAG,IAAI,CAAA;AACzC,OAAA;MAEA,MAAM;QAAE1E,IAAI;AAAED,QAAAA,IAAAA;AAAK,OAAC,GAAGF,eAAe,CAACoF,OAAO,CAACG,WAAW,CAAa,CAAA;MACvE,IAAIC,MAAM,GAAG,CAAC,CAAA;AACd,MAAA,MAAMC,KAAK,GAAGtF,IAAI,CAACE,KAAK,CAACmD,IAAI,CAAA;AAE7B,MAAA,OAAO,IAAI/B,IAAI,CAACC,OAAO,CAAEC,OAAO,IAAK;AACnC,QAAA,MAAM+D,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CAAA;AAElC,QAAA,MAAMC,MAAM,GAAG,YAAY;AACzB,UAAA,MAAMC,QAAQ,GACZlB,OAAO,CAACE,OAAO,IAAI,IAAIa,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGF,KAAK,GAAGd,OAAO,CAACE,OAAO,CAAA;AACnE,UAAA,IAAIgB,QAAQ,IAAIN,MAAM,IAAIC,KAAK,EAAE;YAC/BL,OAAO,CAACS,MAAM,CAACE,UAAU,CACvB,IAAIC,aAAa,CAAC,UAAU,EAAE;AAC5BC,cAAAA,gBAAgB,EAAE,IAAI;cACtBR,KAAK;AACLD,cAAAA,MAAM,EAAEU,IAAI,CAACC,GAAG,CAACX,MAAM,EAAEC,KAAK,CAAA;AAChC,aAAC,CAAC,CACH,CAAA;YAED,MAAMjE,QAAQ,GAAG,MAAM6B,mBAAmB,CAAClD,IAAI,CAACE,KAAK,CAAC,CAAA;YACtD+E,OAAO,CAACG,WAAW,GAAA/E,aAAA,CAAA;cAAK,CAACL,IAAI,CAACC,GAAG,GAAGoB,QAAAA;AAAQ,aAAA,EAAKtB,IAAI,CAAE,CAAA;AAEvD,YAAA,IAAI4F,QAAQ,EAAE;AACZnE,cAAAA,OAAO,CAAC,IAAIsD,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA;AAC1B,cAAA,OAAA;AACF,aAAA;;AAEA;AACA;YACAtD,OAAO,CAACgD,EAAE,CAACyB,IAAI,CAAC,IAAI,EAAEjB,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAA;AACrC,WAAC,MAAM;YACLA,OAAO,CAACS,MAAM,CAACE,UAAU,CACvB,IAAIC,aAAa,CAAC,UAAU,EAAE;AAC5BC,cAAAA,gBAAgB,EAAE,IAAI;cACtBR,KAAK;AACLD,cAAAA,MAAAA;AACF,aAAC,CAAC,CACH,CAAA;YAEDA,MAAM,IAAIH,KAAK,GAAG,EAAE,CAAA;AACpBgB,YAAAA,UAAU,CAACR,MAAM,EAAE,EAAE,CAAC,CAAA;AACxB,WAAA;SACD,CAAA;AACDA,QAAAA,MAAM,EAAE,CAAA;AACV,OAAC,CAAC,CAAA;KACH,CAAA;AACH,GAAC,MAAM;AACL,IAAA,MAAM,IAAIS,KAAK,CACb,4EAA4E,CAC7E,CAAA;AACH,GAAA;AACF;;;;"}