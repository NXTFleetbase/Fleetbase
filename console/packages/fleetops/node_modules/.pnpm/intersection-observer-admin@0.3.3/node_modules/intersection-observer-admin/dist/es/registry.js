var Registry = /** @class */ (function () {
    function Registry() {
        this.registry = new WeakMap();
    }
    Registry.prototype.elementExists = function (elem) {
        return this.registry.has(elem);
    };
    Registry.prototype.getElement = function (elem) {
        return this.registry.get(elem);
    };
    /**
     * administrator for lookup in the future
     *
     * @method add
     * @param {HTMLElement | Window} element - the item to add to root element registry
     * @param {IOption} options
     * @param {IOption.root} [root] - contains optional root e.g. window, container div, etc
     * @param {IOption.watcher} [observer] - optional
     * @public
     */
    Registry.prototype.addElement = function (element, options) {
        if (!element) {
            return;
        }
        this.registry.set(element, options || {});
    };
    /**
     * @method remove
     * @param {HTMLElement|Window} target
     * @public
     */
    Registry.prototype.removeElement = function (target) {
        this.registry.delete(target);
    };
    /**
     * reset weak map
     *
     * @method destroy
     * @public
     */
    Registry.prototype.destroyRegistry = function () {
        this.registry = new WeakMap();
    };
    return Registry;
}());
export default Registry;
//# sourceMappingURL=registry.js.map